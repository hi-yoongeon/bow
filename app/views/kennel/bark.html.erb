<!DOCTYPE html>
<html lang="en">
<head>
    <meta name="viewport" content="user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, width=device-width" />
    <!--meta name="apple-mobile-web-app-capable" content="yes" /-->
    <meta charset="UTF-8" />
    <title>Test</title>
    <link rel="stylesheet" type="text/css" href="http://fonts.googleapis.com/earlyaccess/nanumgothic.css">
    <style type="text/css">
      body {padding:0 200px;}
      @media only screen and (max-device-width: 640px) {
        body {padding:0;}
      }

      * {margin:0;padding:0;font-family:'Nanum Gothic', sans-serif;}
      /*
      body {width:100%;height:100%;}
      body {min-height:540px;}
      body[orient='portrait'] {min-height:540px;}
      body[orient='landscape'] {min-height:400px;}
      */
      .wrapper {float:left;width:100%;height:100%;}
      .header {width:100%;height:28px;
        padding-top:4px;padding-bottom:4px;background:#000;}
      .header .logo {float:left;height:100%;}
      .header .chat_title {float:left;width:75%;
        margin-left:4px;
        line-height:26px;font-size:20px;color:#fff;}
      .header .chat_title.ellipsis {overflow:hidden;text-overflow:ellipsis;
        white-space:nowrap}
      .header .expand_info {float:right;margin-right:4px;height:100%;} 
      .expanded_header {height:100px;background:#000;color:#fff;}
      .pold {display:none}


      .footer {width:100%;height:36px;background:#c1c1c1;}
      .footer .input {float:left;width:80%;margin:4px;font-size:20px;height:24px;}
      .footer .submit {width:14%;height:25px;margin:4px;font-size:10px;}

      .body {width:100%;height:100%;overflow:auto}
      .body {-webkit-overflow-scrolling: touch;}
      .body > * {-webkit-transform: translateZ(0px);}
      
      /* 대화내용 */
      .chatter_wrapper {margin:5px;height:35px}
      .chatter_wrapper .profile_img {margin:0;border-radius:50em}
      
      .chatter_wrapper.bl > div {float:left}
      .chatter_wrapper.bl > div:nth-child(2) {margin-left:5px}
      .chatter_wrapper.bl .chatter_info {float:left;font-size:10px;color:#cecfd2}
      .chatter_wrapper.wh > div {float:right}
      .chatter_wrapper.wh > div:nth-child(2) {margin-right:5px}
      .chatter_wrapper .chatter {text-align:right}
      .chatter_wrapper.wh .chatter_info {float:right;font-size:10px;color:#cecfd2}


    </style>
</head>
<body>
  <section class="wrapper">
    <header class="header">
      <img class="logo" src="profile_white_dog.png" alt="" />
      <h1 class="chat_title ellipsis">대대화제목대화제목대화대화제목대화제목대화화제목대화제목대화제목</h1>
      <img class="expand_info" src="top_arrow_down.png" alt="" />
    </header>  
    <section class="expanded_header pold">
    </section>
    <section class="body">
      <div class="content">
          
      </div>
    </section>
    <footer class="footer">
      <textarea type="text" class="input" name="" rows="1"></textarea>
      <button class="submit">입력</button>
    </footer>
  </section>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.9.0/jquery.min.js"></script>
<script src="http://io.bow.gg/socket.io/socket.io.js"></script>
<script type="text/javascript">
$(function() {
  function BoW(){};
  BoW = {
    chatData: null,
    myName: '<%=@nickname%>',
    myProfileImg: '<@=profile_image%>',
    myRoom: '<%=@kennel_id%>',
    
    init: function() {
      this.appSizeInit();
      this.titleBarExpand();
      this.chatWindowInit();
      this.socketIOInit({
        connectTo: 'http://io.bow.gg/chat'
      });
    },
    appSizeInit: function() {
      $('body').height($(window).height() - 72);
    },
    makeData: function(nick, /*profile*/img, talk, time, flag) {
      var html;
    
      html = '<div class="chatter_wrapper' + (flag ? ' bl' : ' wh') + '">'
        + '<div>'
          + '<img src="' + img + '" width="30" height="30" class="profile_img" alt="' + nick + '" />'
        + '</div>'  
        + '<div>'
          + '<div>'
            + '<p class="chatter">' + talk + '</p>'
          + '</div>' 
          + '<span class="chatter_info">' + nick /* + time */ + '</span>' // 상대시간을 적어줘야할지 절대시간을 적어줘야할지 
        + '</div>'
      + '</div>';

      return html;
    },
    titleBarInit: function() {
      this.titleBarExpand();
    },
    titleBarExpand: function() {
      var expandedHeader = $('.expanded_header')
        , chatTitle = $('.chat_title');

      $('.expand_info').on('click', function(ev) {
        if (expandedHeader.hasClass('pold')) {
          expandedHeader.removeClass('pold')
          chatTitle.removeClass('ellipsis')
          $('.body').height($('.body').height() - 100);
        } else {
          expandedHeader.addClass('pold')
          chatTitle.addClass('ellipsis')
          $('.body').height($('.body').height() + 100);
        }
      });
    },
    chatWindowInit: function() {
      this.chatSubmit(this.makeData);
      this.chatWindowControl();
    },
    chatSubmit: function(makeData) {
      var content = $('.content')
        , body = $('.body')
        , input = $('.input')
        
        , nick = data.nickName || ''
        , img = data.profileImage || ''
        , msg = data.msg || '' 
        , time = data.time || undefined 
        , flag = data.flag || true;

      /*
      $('form').submit(function(ev) {
        ev.preventDefault();
        content.append(makeData(nick, img, input.val(), time, flag));
        body.scrollTop(content.height());
        input.val('');
      });
      */
      input.on('keydown', function(ev) {
        if (ev.keyCode === 13 && $.trim(input.val()) !== '') {
          flag = !!(new Date()%2);  
          content.append(makeData(nick, img, msg, time, flag));
          body.scrollTop(content.height());
          socket.json.send({nickName:myName, msg:msg});
          input.val(''); 
        }
      });

      $('button.submit').on('click', function(ev) {
        ev.preventDefault();
        if (input.val() !== '') {
          content.append(makeData(nick, img, msg, time, flag));
          body.scrollTop(content.height());
          socket.json.send({nickName:myName, msg:msg});
          input.val('');
        }
      });
    },
    chatWindowControl: function() {
      /* input에 포커스가 되었을때 virtual keyboard가 올라감에 따라 
       * input 위치의 변동 필요.
       * position:fixed 사용시 input위치의 이상현상 발생(아이폰). 
       * 그래서 virtual keyboard가 나올때의 scrollTop을 .body 높이에 적용
       */
      $('input').on('focus', function(ev) {
        $('body').height($(window).height() - $('body').scrollTop())
        $('.body').height(372 - $('body').scrollTop());
        $('body').scrollTop(0);
      });
    },
    
    /* related to socket.io */
    socket: null,
    socketIOInit: function(config) {
      var socket = io.connect(config.connectTo || 'http://localhost:3000')
        , myRoom = this.myRoom
        , myName = this.myName
        , profileImage = this.myProfileImg;
        
      socket.emit(
        'join',
        { roomName: myRoom, nickName: myName, profileImage: profileImage });
        
      this.socketOn(socket, this.makeData);
      this.socketEmit(socket);
    },
    socketOn: function(socket, makeData) {
      var content = $('.content')
        , body = $('.body');
        
      socket.on('connect', function(data) {
        console.log('connect');
      });
      
      socket.on('joined', function(data) {
        if ( data.isSuccess ) {
          //showMessage(data.nickName + '님이 입장하셨습니다.');
          console.log(data.nickName + '님이 입장하셨습니다.');
        }
      });
      
      socket.on('leaved', function(data) {
        //showMessage(data.nickName + '님이 나가셨습니다.');
        console.log(data.nickName + '님이 나가셨습니다.');
      });

      socket.on('message', function(data) {
        var nick = data.nickName || ''
          , img = data.profileImage || ''
          , msg = data.msg || ''
          , time = data.time || '' // 대화 입력 시간
          , flag = data.flag || true; // 좌우 구분 
        content.append(makeData(nick, img, input.val(), time, flag));
        body.scrollTop(content.height());
        console.log( data );
      });
      
    },
    socketEmit: function(socket) {
      var myRoom = this.myRoom
        , myName = this.myName;
        
      // 추후 수정 필요 
      $('#joinBtn').click(function(e) {
        console.log(myRoom);
        socket.emit('join', {roomName:myRoom, nickName:myName});
        //location.href='/';
      });
      $('#leaveBtn').click(function(e) {
        socket.emit('leave', {nickName:myName});
        //location.href='/';
      });
      $('#saveBtn').click(function(e) {
        myRoom = $('#myRoom').val();
        myName = $('#myName').val();
        console.log(myRoom, myName);		
        //location.href='/';
      });     
    }
  };
  BoW.init();

});
</script>
</body>
</html>

